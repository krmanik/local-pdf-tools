function M(o){const e=[];let r="",t=!1,n="";for(let a=0;a<o.length;a++){const f=o[a];(f==='"'||f==="'")&&!t?(t=!0,n=f):f===n&&t?(t=!1,n=""):f===" "&&!t?r.trim()&&(e.push(r.trim()),r=""):r+=f}return r.trim()&&e.push(r.trim()),e}function F(o,e){let r=[...e];if(!o)return r;const t=r.findIndex(n=>n.startsWith("-dCompatibilityLevel="));if(t>=0?r[t]=`-dCompatibilityLevel=${o.compatibilityLevel}`:r.splice(2,0,`-dCompatibilityLevel=${o.compatibilityLevel}`),o.colorImageSettings){const n=o.colorImageSettings;n.downsample!==void 0&&r.splice(-1,0,`-dDownsampleColorImages=${n.downsample}`),n.downsample&&n.resolution&&r.splice(-1,0,`-dColorImageResolution=${n.resolution}`)}return r}function R(o,e){if(!o||o.length===0)throw new Error("No arguments provided");const r=o.some(n=>n.startsWith("-sDEVICE=")),t=o.some(n=>n.startsWith("-sOutputFile="));if(!r)throw new Error("Missing -sDEVICE parameter in command");if(!t)throw new Error("Missing -sOutputFile parameter in command");return!0}function S(){import("./gs-worker.203e499b.js")}var g;function h(o,e){try{const{operation:t,customCommand:n,pdfSetting:a,files:f,splitRange:u,advancedSettings:i}=o;if(t==="merge"&&f&&f.length>1)return w(o,e);if(t==="split")return v(o,e);var r=new XMLHttpRequest;r.open("GET",o.psDataURL),r.responseType="arraybuffer",r.onerror=function(){e({error:"Failed to load input file"})},r.onload=function(){try{console.log("onload");let l=[];n&&n.trim()?(l=M(n.trim()),R(l,t)):(l=["-sDEVICE=pdfwrite","-dCompatibilityLevel=1.4","-dNOPAUSE","-dQUIET","-dBATCH","-sOutputFile=output.pdf"],t==="compress"&&a&&l.splice(2,0,`-dPDFSETTINGS=${a}`),i&&(l=F(i,l)),l.push("input.pdf")),console.log("Ghostscript args:",l),g={preRun:[function(){try{self.Module.FS.writeFile("input.pdf",new Uint8Array(r.response))}catch(p){console.error("Error writing input file:",p),e({error:"Failed to write input file: "+p.message})}}],postRun:[function(){try{var p=self.Module.FS.readFile("output.pdf",{encoding:"binary"}),d=new Blob([p],{type:"application/octet-stream"}),c=self.URL.createObjectURL(d);e({pdfDataURL:c,url:o.url});try{self.Module.FS.unlink("input.pdf"),self.Module.FS.unlink("output.pdf")}catch(s){console.warn("Cleanup warning:",s)}}catch(s){console.error("Error reading output file:",s),e({error:"Failed to generate output file: "+s.message})}}],arguments:l,print:function(p){console.log("GS:",p)},printErr:function(p){console.error("GS Error:",p),(p.includes("Error")||p.includes("Fatal"))&&e({error:"Ghostscript error: "+p})},totalDependencies:0,noExitRuntime:1},self.Module?(self.Module.calledRun=!1,self.Module.postRun=g.postRun,self.Module.preRun=g.preRun,self.Module.callMain()):(self.Module=g,S())}catch(l){console.error("Error in processing:",l),e({error:"Processing error: "+l.message})}},r.send()}catch(t){console.error("Error in _GSPS2PDF:",t),e({error:"Initialization error: "+t.message})}}function w(o,e){try{const{files:r,customCommand:t,pdfSetting:n,advancedSettings:a}=o;let f=0;const u=[];let i=!1;r.forEach((l,p)=>{const d=new XMLHttpRequest;d.open("GET",l),d.responseType="arraybuffer",d.onerror=function(){i||(i=!0,e({error:`Failed to load file ${p+1}`}))},d.onload=function(){if(!i)try{if(u[p]=new Uint8Array(d.response),f++,f===r.length){let c=[];if(t&&t.trim())c=M(t.trim()),R(c,"merge");else{if(c=["-sDEVICE=pdfwrite","-dCompatibilityLevel=1.4","-dNOPAUSE","-dQUIET","-dBATCH","-sOutputFile=output.pdf"],n&&c.splice(2,0,`-dPDFSETTINGS=${n}`),a){const s=[...c];c=F(a,s)}for(let s=0;s<r.length;s++)c.push(`input${s}.pdf`)}console.log("Merge args:",c),g={preRun:[function(){try{u.forEach((s,E)=>{self.Module.FS.writeFile(`input${E}.pdf`,s)})}catch(s){console.error("Error writing input files:",s),e({error:"Failed to write input files: "+s.message})}}],postRun:[function(){try{var s=self.Module.FS.readFile("output.pdf",{encoding:"binary"}),E=new Blob([s],{type:"application/octet-stream"}),y=self.URL.createObjectURL(E);e({pdfDataURL:y,operation:"merge"});try{for(let m=0;m<r.length;m++)self.Module.FS.unlink(`input${m}.pdf`);self.Module.FS.unlink("output.pdf")}catch(m){console.warn("Merge cleanup warning:",m)}}catch(m){console.error("Error reading merge output:",m),e({error:"Failed to generate merged file: "+m.message})}}],arguments:c,print:function(s){console.log("GS Merge:",s)},printErr:function(s){console.error("GS Merge Error:",s),(s.includes("Error")||s.includes("Fatal"))&&e({error:"Ghostscript merge error: "+s})},totalDependencies:0,noExitRuntime:1},self.Module?(self.Module.calledRun=!1,self.Module.postRun=g.postRun,self.Module.preRun=g.preRun,self.Module.callMain()):(self.Module=g,S())}}catch(c){i||(i=!0,console.error("Error processing merge file:",c),e({error:"Error processing merge file: "+c.message}))}},d.send()})}catch(r){console.error("Error in _GSMergePDF:",r),e({error:"Merge initialization error: "+r.message})}}function v(o,e){try{const{psDataURL:t,customCommand:n,splitRange:a,advancedSettings:f}=o;var r=new XMLHttpRequest;r.open("GET",t),r.responseType="arraybuffer",r.onerror=function(){e({error:"Failed to load input file for splitting"})},r.onload=function(){try{console.log("split onload");let u=[];if(n&&n.trim())u=M(n.trim()),R(u,"split");else{if(u=["-sDEVICE=pdfwrite","-dCompatibilityLevel=1.4","-dNOPAUSE","-dQUIET","-dBATCH"],a&&a.startPage&&a.endPage){const i=parseInt(a.startPage),l=parseInt(a.endPage);if(isNaN(i)||isNaN(l)||i<1||l<i){e({error:"Invalid page range specified"});return}u.push(`-dFirstPage=${i}`),u.push(`-dLastPage=${l}`)}else{e({error:"Page range not specified for split operation"});return}if(f){const i=[...u.slice(0,-2)],l=u.slice(-2);u=[...F(f,i),...l]}u.push("-sOutputFile=output.pdf"),u.push("input.pdf")}console.log("Split args:",u),g={preRun:[function(){try{self.Module.FS.writeFile("input.pdf",new Uint8Array(r.response))}catch(i){console.error("Error writing split input file:",i),e({error:"Failed to write input file for splitting: "+i.message})}}],postRun:[function(){try{var i=self.Module.FS.readFile("output.pdf",{encoding:"binary"}),l=new Blob([i],{type:"application/octet-stream"}),p=self.URL.createObjectURL(l);e({pdfDataURL:p,operation:"split"});try{self.Module.FS.unlink("input.pdf"),self.Module.FS.unlink("output.pdf")}catch(d){console.warn("Split cleanup warning:",d)}}catch(d){console.error("Error reading split output:",d),e({error:"Failed to generate split file: "+d.message})}}],arguments:u,print:function(i){console.log("GS Split:",i)},printErr:function(i){console.error("GS Split Error:",i),(i.includes("Error")||i.includes("Fatal"))&&e({error:"Ghostscript split error: "+i})},totalDependencies:0,noExitRuntime:1},self.Module?(self.Module.calledRun=!1,self.Module.postRun=g.postRun,self.Module.preRun=g.preRun,self.Module.callMain()):(self.Module=g,S())}catch(u){console.error("Error in split processing:",u),e({error:"Split processing error: "+u.message})}},r.send()}catch(t){console.error("Error in _GSSplitPDF:",t),e({error:"Split initialization error: "+t.message})}}self.addEventListener("message",function({data:o}){if(console.log("message",o),o.target==="wasm"){console.log("Message received from main script",o);try{h(o,e=>{e.error&&console.error("Worker error:",e.error),self.postMessage(e)})}catch(e){console.error("Worker exception:",e),self.postMessage({error:"Worker exception: "+e.message})}}});console.log("Worker ready");
